buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
//apply plugin: 'checkstyle'
//
//checkstyle {
//    version = '7.8.1'
//    config = 'checkstyle/checkstyle.xml' as File
//}
//
//checkstyleMain {
//    source ='src/main/java'
//}
//
//checkstyleTest {
//    source ='src/test/java'
//}
//
//tasks.withType(Checkstyle) {
//    reports {
//        xml.enabled false
//        html.enabled true
//        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
//    }
//}

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    useJUnitPlatform()
}

bootJar {
    baseName = 'gs-consuming-rest'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework:spring-web")
    compile("com.fasterxml.jackson.core:jackson-databind")
    testCompile("junit:junit")
    compile project(':src:Common')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile(
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.0'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.0',
            'org.junit.vintage:junit-vintage-engine:5.4.0'
    )
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}