buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

tasks.withType(Checkstyle) {
    reports {
        html.destination rootProject.file("reports/checkstyle.html")
    }
}

repositories {
    mavenCentral()
}
//client bootjar
bootJar {
    baseName = 'gs-consuming-rest'
    version =  '0.1.0'
}

//server bootjar
bootJar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    useJUnitPlatform()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework:spring-web")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("junit:junit")
//    compile project('src:Common')
    compileOnly 'org.projectlombok:lombok:1.18.6'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    testCompile(
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.0'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.0',
            'org.junit.vintage:junit-vintage-engine:5.4.0'
    )
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

bootJar {
    mainClassName = 'GUI.LoginController'
}
